{"version":3,"sources":["components/Cards.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundary.js","container/App.js","reportWebVitals.js","index.js"],"names":["Cards","id","name","email","className","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAbD,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACtB,OACK,sBAAKC,UAAU,qDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BAAKC,IACL,4BAAIC,WCiBLI,EAtBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIhB,OACK,8BAEMA,EAAOC,KAAI,SAACC,EAAKC,GACf,OAEQ,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGV,UCN5BW,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAmBC,OAAO,SAAjE,SACKJ,EAAMK,YCSJC,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,qBAAKjB,UAAU,MAAf,SACA,uBACIkB,KAAK,SACLlB,UAAU,mCACVmB,YAAY,gBACZC,SAAUH,OCaPI,E,kDAnBX,WAAYZ,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAM,CACVC,UAAS,GAHI,E,qDAOlB,SAAkBC,EAAMC,GAEpBC,KAAKC,SAAS,CAAEJ,UAAS,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACF,8DAENG,KAAKjB,MAAMK,a,GAjBEc,aCmDbC,G,wDA3CX,aAAc,IAAD,8BACT,gBAeJC,eAAiB,SAACC,GACf,EAAKJ,SAAS,CAAEX,YAAYe,EAAMC,OAAOC,SAfxC,EAAKX,MAAM,CACPlB,OAAQ,GACRY,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OAEfkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAOkC,S,oBASzC,WACI,MAA4BZ,KAAKJ,MAA1BlB,EAAP,EAAOA,OAAQY,EAAf,EAAeA,YACTuB,EAAgBnC,EAAOoC,QAAO,SAAAC,GAChC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAS3B,EAAY0B,kBAE1D,OAAQtC,EAAOwC,OAGV,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWiB,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,WAPzB,6C,GA7BKX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,SAElDX,M","file":"static/js/main.1cc33db5.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nconst Cards = ({id, name,email}) => {\r\n   return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n\r\n   ); \r\n} \r\n\r\nexport default Cards;","import React from 'react';\r\nimport Cards from './Cards';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    // if(true){\r\n    //     throw Error('error');\r\n    // }\r\n   return(\r\n        <div>\r\n            {\r\n              robots.map((user,i) =>{\r\n                return(\r\n                    \r\n                        <Cards\r\n                            key={robots[i].id}\r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email} \r\n                        />\r\n                    );\r\n                })\r\n            }\r\n       </div>\r\n    );\r\n}\r\nexport default CardList; ","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY:'scroll',border:'5px solid black', height:\"800px\"}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n    return(\r\n        <div className=\"pa2\">\r\n        <input\r\n            type=\"search\" \r\n            className=\"pa3 ba b--green bg-lightest-blue\" \r\n            placeholder=\"search robots\"\r\n            onChange={searchChange}/>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default SearchBox;","import React , {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n         hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info)\r\n    {\r\n        this.setState({ hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if (this.state.hasError) {\r\n             return( <h1>Ooops ! something went wrong</h1>)\r\n             }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n// import { robots } from './robots'\r\nimport CardList from '../components/CardList'\r\nimport Scroll from '../components/Scroll'\r\nimport SearchBox from '../components/SearchBox'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport './App.css';\r\n \r\nclass App extends Component{\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots:users})); \r\n      \r\n    }\r\n    \r\n    onSearchChange = (event) => {\r\n       this.setState({ searchfield:event.target.value});\r\n              \r\n    }\r\n    \r\n    render(){\r\n        const {robots, searchfield}=this.state;\r\n        const filteredRobots= robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n       return !robots.length ?\r\n             <h1>Loading</h1>:\r\n        (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                <ErrorBoundary>\r\n                    <CardList robots={filteredRobots} />\r\n                </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        ); \r\n           \r\n    }\r\n    \r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import {robots} from './robots'\nReactDOM.render(<App /> , document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}